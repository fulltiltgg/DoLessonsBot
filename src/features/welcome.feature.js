import { Composer } from "grammy";

import { keyboard as daysKeyboard } from './../keyboards/days.keyboard.js'
import { keyboard as lessonsKeyboard } from './../keyboards/lessons.keyboard.js'
import { keyboard as welcomeKeyboard } from './../keyboards/welcome.keyboard.js'

import { Users } from './../helpers/db.js'

export const composer = new Composer();

const feature = composer.chatType('private');

feature.use(welcomeKeyboard);

feature.command('start', async ctx => {
	await ctx.reply('[üëã] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Do Lessons, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å?', {
		reply_markup: welcomeKeyboard
	})
});

feature.hears(/üìÅ –£–∑–Ω–∞—Ç—å/, async ctx => {
	const lessons = await (await Users.findOne({ where: { userId: ctx.from.id } })).getLessons();
	const text = lessons.map(el => `${el.lessonId[0].toUpperCase()+el.lessonId.slice(1)}: ${el.value}`).join('\n');
	await ctx.reply(`[üß©] –í–æ—Ç –≤–∞—à–µ –î/–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n<code>${text}</code>`);
});
feature.hears(/üìî –£—Ä–æ–∫–∏/, async ctx => ctx.reply('[üìì] –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫!', { reply_markup: lessonsKeyboard }));
feature.hears(/üìù –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ/, async ctx => ctx.reply('[‚è≥] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏!', { reply_markup: daysKeyboard }));