import { Composer  } from 'grammy';
import { createConversation } from '@grammyjs/conversations';

import { keyboard as setScheduleKeyboard } from './../keyboards/set-schedule.keyboard.js';
import { keyboard as menuKeyboard } from './../keyboards/menu.keyboard.js';
import { keyboard as backKeyboard } from './../keyboards/back.keyboard.js';

import { Schedules } from './../../db/models/Schedules.js'

export const composer = new Composer();

const feature = composer.chatType('private');

feature.hears(/üìù –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ|\/setschedule/i, async (ctx) => {
	await ctx.reply('[üìì] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', {
		reply_markup: setScheduleKeyboard,
	});
});

feature.callbackQuery(/setschedule-call/i, async (ctx) => {
	await ctx.editMessageText('[üìì] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', {
		reply_markup: setScheduleKeyboard,
	});
});

function normalizeDay(dayName) {
	const days = { '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ': 0, '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫': 1, '–≤—Ç–æ—Ä–Ω–∏–∫': 2, '—Å—Ä–µ–¥–∞': 3, '—á–µ—Ç–≤–µ—Ä–≥': 4, '–ø—è—Ç–Ω–∏—Ü–∞': 5, '—Å—É–±–±–æ—Ç–∞': 6 };

	return days[dayName];
};

const setScheduleConversation = async (conv, ctx) => {
	const dayName = ctx.match[0].split('-')[1];

	await ctx.reply(
		`[‚öí] –£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è <b>${dayName}</b>.`,
		{ reply_markup: backKeyboard }
	);
	
	const { msg } = await conv.waitFor('message:text');

	if (msg.text === '‚Ü™Ô∏è –ù–∞–∑–∞–¥') {
		return await ctx.reply(
			`[‚ùå] –û—Ç–º–µ–Ω–∞ —É–∫–∞–∑—ã–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è <b>${dayName}</b>.`, {
			reply_markup: menuKeyboard,
		});
	}

	await conv.external(async () => {
		let schedule = await Schedules.findOrCreate({ userId: ctx.from.id, dayId: normalizeDay(dayName) });

		schedule.lessons = [];

		for (let lesson of msg.text.split('\n')) {
			schedule.lessons.push(lesson.toLowerCase());
		}

		await schedule.save();
	});

	return await ctx.reply(
		`[üéì] –í—ã —É–∫–∞–∑–∞–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è <b>${dayName}</b>: <code>${msg.text}</code>`, {
		reply_markup: menuKeyboard,
	});
};
feature.use(createConversation(setScheduleConversation));

feature.callbackQuery(/setschedule-.*/i, async (ctx) => {
	ctx.answerCallbackQuery();
	await ctx.conversation.enter('setScheduleConversation');
});